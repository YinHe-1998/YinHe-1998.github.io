[{"content":"##This is a Bash script used to convert all GBK-encoded text files in a specified folder and its subfolders to UTF-8 encoding.\n# Define a function for recursively processing files in a folder process_files() { local path=\u0026#34;$1\u0026#34; local file # Traverse files in the folder for file in \u0026#34;$path\u0026#34;/*.txt; do if [ -f \u0026#34;$file\u0026#34; ]; then # Check if the file encoding is UTF-8 encoding=$(file -b --mime-encoding \u0026#34;$file\u0026#34;) if [[ \u0026#34;$encoding\u0026#34; == \u0026#34;utf-8\u0026#34; ]]; then echo \u0026#34;File \u0026#39;$file\u0026#39; is already in UTF-8 format, skipping conversion.\u0026#34; else # Use iconv to convert the file to UTF-8 and replace the source file iconv -f GBK -t utf-8 \u0026#34;$file\u0026#34; \u0026gt; \u0026#34;${file}_utf8.tmp\u0026#34; # Converted file as a temporary file mv \u0026#34;${file}_utf8.tmp\u0026#34; \u0026#34;$file\u0026#34; # Replace the source file echo \u0026#34;File \u0026#39;$file\u0026#39; converted to UTF-8 format and replaced the source file.\u0026#34; fi fi done # Traverse subfolders for file in \u0026#34;$path\u0026#34;/*; do if [ -d \u0026#34;$file\u0026#34; ]; then process_files \u0026#34;$file\u0026#34; # Recursively process subfolders fi done } # Prompt the user to enter the folder path read -p \u0026#34;Please enter the folder path: \u0026#34; ","permalink":"https://yinhe-1998.github.io/posts/convert-utf-8/","summary":"##This is a Bash script used to convert all GBK-encoded text files in a specified folder and its subfolders to UTF-8 encoding.\n# Define a function for recursively processing files in a folder process_files() { local path=\u0026#34;$1\u0026#34; local file # Traverse files in the folder for file in \u0026#34;$path\u0026#34;/*.txt; do if [ -f \u0026#34;$file\u0026#34; ]; then # Check if the file encoding is UTF-8 encoding=$(file -b --mime-encoding \u0026#34;$file\u0026#34;) if [[ \u0026#34;$encoding\u0026#34; == \u0026#34;utf-8\u0026#34; ]]; then echo \u0026#34;File \u0026#39;$file\u0026#39; is already in UTF-8 format, skipping conversion.","title":"Convert Utf 8"}]